{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/shared/configs/cancellation.codes.config.ts","webpack:///./src/app/shared/configs/env.config.ts","webpack:///./src/app/shared/configs/http.config.ts","webpack:///./src/app/shared/configs/index.ts","webpack:///./src/app/shared/configs/labels.config.ts","webpack:///./src/app/shared/configs/levels.config.ts","webpack:///./src/app/shared/configs/route.config.ts","webpack:///./src/app/shared/configs/trip.status.config.ts","webpack:///./src/app/shared/configs/urls.config.ts","webpack:///./src/app/shared/guard/auth.guard.ts","webpack:///./src/app/shared/guard/index.ts","webpack:///./src/app/shared/interceptor/token.interceptor.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/http.service.ts","webpack:///./src/app/shared/services/index.ts","webpack:///./src/app/shared/services/location.service.ts","webpack:///./src/app/shared/services/main.service.ts","webpack:///./src/app/shared/services/trip.service.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/app/shared/utils/http.util.ts","webpack:///./src/app/shared/utils/index.ts","webpack:///./src/app/shared/utils/log.util.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"../contents/content.module\": [\n\t\t\"./src/app/contents/content.module.ts\",\n\t\t\"common\",\n\t\t\"contents-content-module\"\n\t],\n\t\"./layout/layout.module\": [\n\t\t\"./src/app/layout/layout.module.ts\",\n\t\t\"common\",\n\t\t\"layout-layout-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './shared/guard';\nimport { LoginComponent } from './login/login.component';\nimport { RouteConfig } from './shared/configs/route.config';\n\nconst routes: Routes = [\n    {\n        path: RouteConfig.deRoutify(RouteConfig.ROUTE_DEFAULT),\n        loadChildren: './layout/layout.module#LayoutModule',\n        canActivate: [AuthGuard]\n    },\n    {\n        path: RouteConfig.deRoutify(RouteConfig.ROUTE_LOG_IN),\n        component: LoginComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n    providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"body {\\n  background-color: \\\"#3f51b5\\\"; }\\n\"","import {Component} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NavigationStart, NavigationEnd, NavigationError, Router} from '@angular/router';\nimport {getRouteLevel} from './shared/configs/route.config';\nimport {MainService, UserService} from './shared/services';\nimport {RouteConfig} from './shared/configs/route.config';\nimport {LogUtil} from './shared/utils/log.util';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    constructor(\n        private translate: TranslateService,\n        private router: Router,\n        private userService: UserService,\n        private mainService: MainService) {\n\n        translate.setDefaultLang('en');\n        router.events.subscribe(event => {\n\n            if (event instanceof NavigationStart) {\n                // Set managed user level\n                const managedUserLevel = getRouteLevel(event.url);\n                if (managedUserLevel !== null) {\n                    this.userService.setManagedUserLevel(managedUserLevel);\n                }\n                // set showing sidebar toggle\n                this.mainService.setIsShowingSideBar(event.url !== RouteConfig.ROUTE_TRIP);\n                // set showing add form toggle\n                this.mainService.setIsShowingAddForm(\n                    event.url.startsWith('/add') || event.url.startsWith('/blank') ||\n                    event.url.startsWith('/trip'));\n\n            }\n\n            if (event instanceof NavigationEnd) {\n                // Hide loading indicator\n            }\n\n            if (event instanceof NavigationError) {\n                // Hide loading indicator\n                // Present error to user\n                console.log(event.error);\n            }\n        });\n    }\n}\n","import {LayoutModule} from '@angular/cdk/layout';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule, HttpClient, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {CommonModule} from '@angular/common';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatButtonModule, MatCheckboxModule, MatInputModule, MatCardModule} from '@angular/material';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport {LocationService, MainService, UserService, AuthService, TripService} from './shared/services';\nimport {TokenInterceptor} from './shared/interceptor/token.interceptor';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSnackBar} from '@angular/material';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {HttpService} from './shared/services/http.service';\n\n\n// AoT requires an exported function for factories\nexport const createTranslateLoader = (http: HttpClient) => {\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n};\n\n@NgModule({\n    declarations: [AppComponent, LoginComponent],\n    imports: [\n        LayoutModule, // local module\n        MatSnackBarModule,\n        MatProgressSpinnerModule,\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        OverlayModule,\n        HttpClientModule,\n        CommonModule,\n        MatProgressBarModule,\n        FlexLayoutModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule, MatCheckboxModule, MatInputModule, MatCardModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: createTranslateLoader,\n                deps: [HttpClient]\n            }\n        })\n    ],\n    providers: [MainService, AuthService, UserService, LocationService, TripService, HttpService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInterceptor,\n            multi: true\n        },\n        MatSnackBar\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<div class=\\\"login-page\\\">\\n    <div class=\\\"content\\\">\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLogin()\\\" class=\\\"login-form\\\">\\n            <div class=\\\"text-center\\\">\\n                <h2 class=\\\"app-name\\\">ETTA Local System</h2>\\n            </div>\\n            <div *ngIf=\\\"serverError && !loginForm.dirty\\\">\\n                <span class=\\\"help-block\\\">Incorrect email or password. Please try again.</span>\\n            </div>\\n            <div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n                <div fxFlexFill>\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <input name=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n                        <span class='help-block' *ngIf=\\\"!loginForm.get('email').value && loginForm.touched\\\">\\n                            Please enter an email\\n                        </span>\\n                        <span class='help-block' *ngIf=\\\"(loginForm.get('email').value !== '') && (!loginForm.get('email').valid) &&\\n                        loginForm.get('email').dirty\\\">\\n                            Please enter a valid email\\n                        </span>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n                <div fxFlexFill>\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <input matInput name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n                        <span class='help-block' *ngIf=\\\"!loginForm.get('password').value && loginForm.touched\\\">\\n                            Please enter a password\\n                        </span>\\n                        <span class='help-block' *ngIf=\\\"(loginForm.get('password').value !== '') && (!loginForm.get('password').valid) && loginForm.get('password').dirty\\\">\\n                            Please enter at least 4 characters\\n                        </span>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" style=\\\"margin: 20px 0 30px 0\\\">\\n                <div fxFlex>\\n                    <mat-checkbox color=\\\"primary\\\">Remember Me</mat-checkbox>\\n                </div>\\n                <div fxFlex fxLayoutAlign=\\\"end\\\">\\n                    <a href=\\\"javascript:void(0)\\\">Forget Password?</a>\\n                </div>\\n            </div>\\n            <div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n                <div fxFlexFill>\\n                    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!loginForm.valid || loading\\\" class=\\\"w-100\\\" type=\\\"submit\\\">\\n                        <span>\\n                            <span *ngIf=\\\"!loading\\\">Login</span>\\n                            <mat-spinner color='accent' *ngIf=\\\"loading\\\"></mat-spinner>\\n                        </span>\\n\\n                    </button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\"","module.exports = \".login-page {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n  position: relative; }\\n  .login-page .content {\\n    z-index: 1;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center; }\\n  .login-page .content .app-name {\\n      margin-top: 0px;\\n      padding-bottom: 10px;\\n      font-size: 32px; }\\n  .login-page .content .login-form {\\n      padding: 40px;\\n      background: #fff;\\n      width: 500px;\\n      box-shadow: 0 0 10px #ddd; }\\n  .login-page .content .login-form input:-webkit-autofill {\\n        -webkit-box-shadow: 0 0 0 30px white inset; }\\n  .login-page:after {\\n    content: '';\\n    background: #fff;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 50%;\\n    right: 0; }\\n  .login-page:before {\\n    content: '';\\n    background: #3f51b5;\\n    position: absolute;\\n    top: 50%;\\n    left: 0;\\n    bottom: 0;\\n    right: 0; }\\n  .text-center {\\n  text-align: center; }\\n  .w-100 {\\n  width: 100%; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormControl, Validators, FormBuilder} from '@angular/forms';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {User} from '../shared/models';\nimport {ServerResponse} from '../shared/interfaces';\nimport {RouteConfig} from '../shared/configs';\nimport {Level} from '../shared/configs';\nimport {AuthService} from '../shared/services';\nimport {LogUtil} from '../shared/utils';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n    constructor(private router: Router, private fb: FormBuilder, private authService: AuthService) {\n        this.loginForm = fb.group({\n            email: new FormControl(null, [Validators.required, Validators.email]),\n            password: new FormControl(null, [Validators.required, Validators.minLength(4)])\n        });\n    }\n\n    loading = false;\n    user: User = {\n        email: '',\n        password: ''\n    };\n    loginForm: FormGroup;\n\n    serverError = false;\n    serverErrorMessage = '';\n\n    ngOnInit() {\n    }\n\n    onLogin() {\n        this.loading = true;\n        this.user.email = this.loginForm.value.email;\n        this.user.password = this.loginForm.value.password;\n        this.authService.loginUser(this.user)\n            .subscribe(\n                response => this.handleAuthResponse(response),\n                error => {\n                    const err = error as HttpErrorResponse;\n                    let msg = '';\n                    if (err.status === 403) {\n                        msg = 'Invalid email or password, please try again!';\n                        this.setServerError(true, msg);\n                    } else {\n                        msg = `Error authenticating, status: ${err.status} `;\n                        this.setServerError(true, msg);\n                    }\n                    this.loading = false;\n                    LogUtil.ConsoleNag(this.loading + 'loading');\n                }\n            );\n    }\n\n    handleAuthResponse(resp: ServerResponse) {\n        if (resp.success) {\n            if (this.authService.getManagingUserLevel() === Level.DISPATCHER) {\n                this.router.navigateByUrl(RouteConfig.ROUTE_TRIP).catch(reason => {\n                    LogUtil.ConsoleNag('Could not navigate to search: ' + reason);\n                });\n            } else {\n                this.router.navigateByUrl(RouteConfig.ROUTE_BLANK_PAGE).catch(reason => {\n                    LogUtil.ConsoleNag('Could not navigate to search: ' + reason);\n                });\n            }\n        } else {\n            LogUtil.ConsoleNag('SERVER ERROR: ' + JSON.stringify(resp.error));\n            this.setServerError(true, resp.error);\n        }\n    }\n\n    setServerError(value: boolean, msg?: string) {\n        LogUtil.ConsoleNag(msg);\n        this.serverError = value;\n        this.serverErrorMessage = msg;\n        this.loginForm.markAsPristine();\n    }\n}\n","export enum CancellationCode {\n    CUB_NOT_FOUND = 'cub not found',\n    DRIVER_LOST_CUSTOMER = 'driver lost customer',\n    DRIVER_LATE = 'driver late',\n    DRIVER_CANCEL_REQUEST = 'driver cancel request',\n    CUSTOMER_CANCEL_REQUEST = 'customer cancel request',\n    CUSTOMER_NOT_RESPONDING = 'customer not responding'\n}\n\nexport function getCancellationCode(codeString: string): CancellationCode {\n    switch (codeString) {\n        case CancellationCode.CUB_NOT_FOUND:\n            return CancellationCode.CUB_NOT_FOUND;\n        case CancellationCode.DRIVER_LOST_CUSTOMER:\n            return CancellationCode.DRIVER_LOST_CUSTOMER;\n        case CancellationCode.DRIVER_LATE:\n            return CancellationCode.DRIVER_LATE;\n        case CancellationCode.DRIVER_CANCEL_REQUEST:\n            return CancellationCode.DRIVER_CANCEL_REQUEST;\n        case CancellationCode.CUSTOMER_CANCEL_REQUEST:\n            return CancellationCode.CUSTOMER_CANCEL_REQUEST;\n        case CancellationCode.CUSTOMER_NOT_RESPONDING:\n            return CancellationCode.CUSTOMER_NOT_RESPONDING;\n        default:\n            return CancellationCode.CUSTOMER_CANCEL_REQUEST;\n    }\n}\n\nexport function getCancellationLabel(codeString: string): string {\n    switch (codeString) {\n        case CancellationCode.CUB_NOT_FOUND:\n            return 'Taxi Not Found';\n        case CancellationCode.DRIVER_LOST_CUSTOMER:\n            return 'Driver Lost Customer';\n        case CancellationCode.DRIVER_LATE:\n            return 'Driver Was Late';\n        case CancellationCode.DRIVER_CANCEL_REQUEST:\n            return 'Driver Cancelled Request';\n        case CancellationCode.CUSTOMER_CANCEL_REQUEST:\n            return 'Customer Cancelled Request';\n        case CancellationCode.CUSTOMER_NOT_RESPONDING:\n            return 'Customer Did Not Respond';\n        default:\n            return CancellationCode.CUSTOMER_CANCEL_REQUEST;\n    }\n}\n","export class EnvConfig {\n    static readonly DEBUG = true;\n}\n","import {HttpHeaders} from '@angular/common/http';\n\nexport const defaultHttpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n    })\n};\n","export * from './cancellation.codes.config';\nexport * from './env.config';\nexport * from './labels.config';\nexport * from './levels.config';\nexport * from './route.config';\nexport * from './trip.status.config';\nexport * from './urls.config';\n","export enum Label {\n    ADMIN_LOWER_CASE = 'admin',\n    SUPERVISOR_LOWER_CASE = 'supervisor',\n    DRIVER_LOWER_CASE = 'driver',\n    DISPATCHER_LOWER_CASE = 'dispatcher',\n    CORPORATE_LOWER_CASE = 'corporate',\n    ADMIN_CAPTIALIZED = 'Admin',\n    SUPERVISOR_CAPITALIZED = 'Supervisor',\n    DRIVER_CAPITALIZED = 'Driver',\n    DISPATCHER_CAPITALIZED = 'Dispatcher',\n    CORPORATE_CAPITALIZED = 'Corporate',\n    CORPORATE_CLIENT_CAPITALIZED = 'Corporate Client',\n    CUSTOMER_LOWER_CASE = 'customer',\n    CUSTOMER_CAPITALIZED = 'Customer',\n    LEVEL = 'level',\n    TOKEN = 'token',\n    IS_LOGGED_IN = 'isLoggedIn',\n    AUTHORIZATION = 'Authorization',\n    TRUE = 'true'\n}\n","export enum Level {\n    FINANCE = 'finance',\n    DISPATCHER = 'dispatcher',\n    SUPERVISOR = 'supervisor',\n    CORPORATE_CLIENT = 'corporate_client',\n    ADMIN = 'admin',\n    DRIVER = 'driver',\n    CUSTOMER = 'customer'\n}\n\nexport function getLevel(level_string: string): Level {\n    switch (level_string) {\n        case Level.ADMIN:\n            return Level.ADMIN;\n        case Level.SUPERVISOR:\n            return Level.SUPERVISOR;\n        case Level.DISPATCHER:\n            return Level.DISPATCHER;\n        case Level.FINANCE:\n            return Level.FINANCE;\n        case Level.CORPORATE_CLIENT:\n            return Level.CORPORATE_CLIENT;\n        case Level.CUSTOMER:\n            return Level.CUSTOMER;\n        case Level.DRIVER:\n            return Level.DRIVER;\n        default:\n            // window.alert(`Invalid level string: ${level_string}, can not convert to type Level`);\n            return undefined;\n    }\n}\n","import {Level} from './levels.config';\n\nexport class RouteConfig {\n    static readonly ROUTE_LOG_IN = '/login';\n    static readonly ROUTE_DEFAULT = '/';\n    static readonly ROUTE_ADMIN = \"/admin\";\n    static readonly ROUTE_ADD_DRIVER = '/add-driver';\n    static readonly ROUTE_ADD_CUSTOMER = '/add-customer';\n    static readonly ROUTE_ADD_CORPORATE = '/add-corporate';\n    static readonly ROUTE_ADD_DISPATCHER = '/add-dispatcher';\n    static readonly ROUTE_ADD_SUPERVISOR = '/add-supervisor';\n    static readonly ROUTE_EDIT = '/edit';\n    static readonly ROUTE_EDIT_DRIVER = '/edit-driver';\n    static readonly ROUTE_EDIT_CUSTOMER = '/edit-customer';\n    static readonly ROUTE_EDIT_CORPORATE = '/edit-corporate';\n    static readonly ROUTE_EDIT_DISPATCHER = '/edit-dispatcher';\n    static readonly ROUTE_EDIT_SUPERVISOR = '/edit-supervisor';\n    static readonly ROUTE_SEARCH_DRIVER = '/search-driver';\n    static readonly ROUTE_SEARCH_CUSTOMER = '/search-customer';\n    static readonly ROUTE_SEARCH_CORPORATE = '/search-corporate';\n    static readonly ROUTE_SEARCH_SUPERVISOR = '/search-supervisor';\n    static readonly ROUTE_SEARCH_DISPATCHER = '/search-dispatcher';\n    static readonly ROUTE_BLANK_PAGE = '/blank-page';\n    static readonly ROUTE_TRIP = '/trip';\n\n    /**\n     * deroutify\n     * removes initial '/' from given route url\n     * @param {string} path\n     * @returns {string}\n     */\n    static deRoutify(path: string): string {\n        return path.substring(1, path.length);\n    }\n    static parameterized(path: string, param: string): string {\n        return `${path.substring(1, path.length)}/:${param}`;\n    }}\n\nexport function getRouteLevel(route: string): Level {\n    if (route.indexOf('customer') !== -1) {\n        return Level.CUSTOMER;\n    } else if (route.indexOf('driver') !== -1) {\n        return Level.DRIVER;\n    } else if (route.indexOf('dispatcher') !== -1) {\n        return Level.DISPATCHER;\n    } else if (route.indexOf('supervisor') !== -1) {\n        return Level.SUPERVISOR;\n    } else if (route.indexOf('corporate') !== -1) {\n        return Level.CORPORATE_CLIENT;\n    } else if (route.indexOf('trip') !== -1) {\n        return Level.CUSTOMER;\n    } else if (route.indexOf('blank-page') !== -1) {\n        return Level.CUSTOMER;\n    } else {\n        // default\n        //console.log('invalid route for route level: ' + route);\n        return Level.CUSTOMER;\n    }\n}\n","import {LogUtil} from '../utils';\n\nexport enum TripStatus {\n    PRE_PENDING = 'pre_pending',\n    PENDING = 'pending',\n    ACCEPTED = 'accepted',\n    STARTED = 'started',\n    ARRIVED = 'arrived',\n    CANCELLED = 'cancelled'\n}\n\nexport function getTripStatus(statusString: string) {\n    switch (statusString) {\n        case TripStatus.PRE_PENDING:\n            return TripStatus.PRE_PENDING;\n        case TripStatus.PENDING:\n            return TripStatus.PENDING;\n        case TripStatus.ACCEPTED:\n            return TripStatus.ACCEPTED;\n        case TripStatus.STARTED:\n            return TripStatus.STARTED;\n        case TripStatus.ARRIVED:\n            return TripStatus.ARRIVED;\n        default:\n            LogUtil.AlertNag(`unknown trip status string: ${statusString}`);\n            return TripStatus.PENDING;\n    }\n}\n","export class UrlConfig {\n    //static readonly DOMAIN_URL = 'http://localhost:3000/';\n    static readonly DOMAIN_URL = 'https://etta-app.herokuapp.com/';\n    static readonly API_URL = `${UrlConfig.DOMAIN_URL}api/v1/`;\n    static readonly USER_URL = `${UrlConfig.API_URL}user`;\n    static readonly ADMIN_URL = `${UrlConfig.API_URL}user/admin`;\n    static readonly SUPERVISOR_URL = `${UrlConfig.API_URL}user/supervisor`;\n    static readonly DISPATCHER_URL = `${UrlConfig.API_URL}user/dispatcher`;\n    static readonly DRIVER_URL = `${UrlConfig.API_URL}user/driver`;\n    static readonly CUSTOMER_URL = `${UrlConfig.API_URL}user/customer`;\n    static readonly CORPORATE_URL = `${UrlConfig.API_URL}corporate`;\n    static readonly LOCATION_URL = `${UrlConfig.API_URL}location`;\n    static readonly LOGIN_URL = `${UrlConfig.API_URL}login`;\n    static readonly ADMINISTRATOR_URL = `${UrlConfig.API_URL}admin`;\n    static readonly TRIP_URL = `${UrlConfig.API_URL}trip`;\n    static readonly TRIP_URL__PENDING = `${UrlConfig.API_URL}trip/pending`;\n    static readonly TRIP_URL__ACCEPTED = `${UrlConfig.API_URL}trip/accepted`;\n    static readonly TRIP_URL__STARTED = `${UrlConfig.API_URL}trip/started`;\n    static readonly TIMESTAMP_URL = `${UrlConfig.API_URL}timestamp`;\n    static readonly UPLOAD_URL = `${UrlConfig.DOMAIN_URL}images`;\n    static readonly DEFAULT_AVATAR = '/uploads/anonymous.png';\n    static readonly SEARCH_TRIP_URL = `${UrlConfig.API_URL}trip/search`;\n\n    static getFullDefaultAvatar(): string {\n        return `${UrlConfig.DOMAIN_URL}${UrlConfig.DEFAULT_AVATAR.split('/')[2]}`;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { RouteConfig } from '../configs/route.config';\nimport {AuthService} from '../services';\nimport {LogUtil} from '../utils/log.util';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router, private authService: AuthService) { }\n\n    canActivate() {\n        if (this.authService.getAuthUser() !== null) {\n            return true;\n        }\n        this.router.navigate([RouteConfig.ROUTE_LOG_IN]).catch(reason => {\n            LogUtil.ConsoleNag('Could not navigate to login: ' + reason, true);\n        });\n        return false;\n    }\n}\n","export * from './auth.guard';\n","import {Injectable} from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../services';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n    constructor(public auth: AuthService) {\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        request = request.clone({\n            setHeaders: {\n                Authorization: `Bearer ${this.auth.getToken()}`\n            }\n        });\n        return next.handle(request);\n    }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Label} from '../configs/labels.config';\nimport {User} from '../models/user.model';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {UrlConfig} from '../configs/urls.config';\nimport {getLevel, Level} from '../configs/levels.config';\nimport {tap} from 'rxjs/operators';\nimport {ServerResponse} from '../interfaces/server.response.interface';\nimport {defaultHttpOptions} from '../configs/http.config';\nimport {Observable} from 'rxjs';\nimport {handleError} from '../utils/http.util';\nimport {LogUtil} from '../utils/log.util';\n\n@Injectable()\nexport class AuthService {\n\n    private http: HttpClient;\n\n    constructor(http: HttpClient) {\n        this.http = http;\n    }\n\n    getToken(): string {\n        return localStorage.getItem(Label.TOKEN);\n    }\n\n    // this is the managing user\n    getAuthUser(): User {\n        if (this.getToken() === null) {\n            return null;\n        }\n        const jwt_decode = new JwtHelperService();\n        return jwt_decode.decodeToken(this.getToken());\n    }\n\n    getManagingUserLevel(): Level {\n        return getLevel(this.getAuthUser().level);\n    }\n\n    getAuthUserAvatar() {\n        return `${UrlConfig.DOMAIN_URL}/${this.getAuthUser().avatar_url.split('uploads/')[1]}`;\n    }\n\n    loginUser(user: User): Observable<ServerResponse> {\n        LogUtil.ConsoleNag(JSON.stringify(user));\n        return this.http.post<ServerResponse>(UrlConfig.LOGIN_URL, user, defaultHttpOptions).pipe(\n            tap(\n                // response is of ServerResponse type\n                response => {\n                    if (response.success) {\n                        if (response.token) {\n                            // store only the token, everything else will be\n                            // extracted from it.\n                            localStorage.setItem(Label.TOKEN, response.token);\n                        } else {\n                            LogUtil.AlertNag('no token returned with login response');\n                        }\n                    }\n                    return response;\n                },\n                // if error, intercept it here\n                error => {\n                    handleError(error);\n                    return error;\n                }\n            )\n        );\n    }\n\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {UrlConfig} from '../configs';\nimport {defaultHttpOptions} from '../configs/http.config';\n\n@Injectable()\nexport class HttpService {\n\n    private http: HttpClient;\n\n    constructor(http: HttpClient) {\n        this.http = http;\n    }\n\n    getTimeStamp(): Promise<any> {\n        return this.http.get<any>(UrlConfig.TIMESTAMP_URL, defaultHttpOptions).toPromise();\n    }\n\n}\n","export * from './main.service';\nexport * from './user.service';\nexport * from './location.service';\nexport * from './auth.service';\nexport * from './trip.service';\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {UrlConfig} from '../configs';\nimport {Location} from '../models';\nimport {defaultHttpOptions} from '../configs/http.config';\nimport {ServerResponse} from '../interfaces';\n\n@Injectable()\nexport class LocationService {\n\n    private http: HttpClient;\n\n    constructor(http: HttpClient) {\n        this.http = http;\n    }\n\n    getLocationById(id: string): Observable<ServerResponse> {\n        const searchUrl = `${UrlConfig.LOCATION_URL}/details/${id}`;\n        return this.http.get<any>(searchUrl);\n    }\n\n    getLocationByName(name: string): Observable<ServerResponse> {\n        const searchUrl = `${UrlConfig.LOCATION_URL}/${name}`;\n        return this.http.get<any>(searchUrl);\n    }\n\n    addLocation(location: Location): Observable<ServerResponse> {\n        const addUrl = UrlConfig.LOCATION_URL;\n        return this.http.post<ServerResponse>(addUrl, location, defaultHttpOptions);\n    }\n\n    updateLocation(location: Location): Observable<ServerResponse> {\n        const updateUrl = `${UrlConfig.LOCATION_URL}/${location._id}`;\n        return this.http.put<ServerResponse>(updateUrl, location, defaultHttpOptions);\n    }\n\n    deleteLocation(id: String): Observable<ServerResponse> {\n        const deleteUrl = `${UrlConfig.LOCATION_URL}/${id}`;\n        return this.http.delete<ServerResponse>(deleteUrl);\n    }\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class MainService {\n\n    // used for toggling the sidebar\n    private is_showing_side_bar = true;\n    // used for toggling the floating add button\n    private is_showing_add_form = false;\n\n    setIsShowingSideBar(showing: boolean) {\n        this.is_showing_side_bar = showing;\n    }\n\n    isShowingSideBar(): boolean {\n        return this.is_showing_side_bar;\n    }\n\n    setIsShowingAddForm(showing: boolean) {\n        this.is_showing_add_form = showing;\n    }\n\n    isShowingAddForm(): boolean {\n        return this.is_showing_add_form;\n    }\n\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {UrlConfig} from '../configs';\nimport {defaultHttpOptions} from '../configs/http.config';\nimport * as socketio from 'socket.io-client';\nimport {Subject, from, Observable} from 'rxjs';\nimport { LogUtil } from '../utils';\n\n@Injectable()\nexport class TripService {\n\n    private http: HttpClient;\n    private socket: SocketIOClient.Socket;\n    constructor(http: HttpClient) {\n        this.http = http;\n\n    }\n\n    getTrips() {\n        return this.http.get<any>(UrlConfig.TRIP_URL, defaultHttpOptions);\n    }\n\n    getTripById(id): Promise<any> {\n        return this.http.get(`${UrlConfig.TRIP_URL}/${id}`, defaultHttpOptions).toPromise();\n    }\n\n    addTrip(trip) {\n        return this.http.post(UrlConfig.TRIP_URL, trip, defaultHttpOptions);\n    }\n\n    updateTrip(id, trip) {\n        return this.http.put(`${UrlConfig.TRIP_URL}/${id}`, trip, defaultHttpOptions);\n    }\n\n    updateTripNotificationInfo(id, body): Promise<any> {\n        return this.http.put(`${UrlConfig.TRIP_URL}/notified/${id}`, body, defaultHttpOptions).toPromise();\n    }\n\n    removeTripById(id) {\n        return this.http.delete<any>(`${UrlConfig.TRIP_URL}/${id}`);\n    }\n\n    cancelTrip(id) {\n        return this.http.get<any>(`${UrlConfig.TRIP_URL}/cancel/${id}`);\n    }\n\n    // get pending trips\n    getPendingTrips(): Observable<any> {\n        return this.http.get<any>(UrlConfig.TRIP_URL__PENDING);\n    }\n\n    updatePendingTrips(): Observable<any> {\n        const socket = socketio(UrlConfig.DOMAIN_URL, {path: '', transports: ['websocket']});\n        // tslint:disable-next-line:no-shadowed-variable\n        socket.on('connection', socket => console.log(socket));\n        const subject = new Subject();\n        socket.on('pending trips', data => subject.next(data));\n        return from(subject);\n    }\n\n    // get accepted trips\n    getAcceptedTrips() {\n        return this.http.get<any>(UrlConfig.TRIP_URL__ACCEPTED);\n    }\n    \n    updateAcceptedTrips(): Observable<any> {\n        const socket = socketio(UrlConfig.DOMAIN_URL, {path: '', transports: ['websocket']});\n        // tslint:disable-next-line:no-shadowed-variable\n        socket.on('connection', socket => console.log(socket));\n        const subject = new Subject();\n        socket.on('accepted trips', data => subject.next(data));\n        return from(subject);\n    }\n\n    // get started trips\n    getStartedTrips() {\n        return this.http.get<any>(UrlConfig.TRIP_URL__STARTED);\n    }\n\n    updateStartedTrips(): Observable<any> {\n        const socket = socketio(UrlConfig.DOMAIN_URL, {path: '', transports: ['websocket']});\n        // tslint:disable-next-line:no-shadowed-variable\n        socket.on('connection', socket => console.log(socket));\n        const subject = new Subject();\n        socket.on('started trips', data => subject.next(data));\n        return from(subject);\n    }\n\n    // search by customer name\n    getTripsByCustomerName(customerName: string): Observable<any> {\n        return this.http.get<any>(UrlConfig.SEARCH_TRIP_URL, {\n            params: {\n                customer_name: customerName\n            }\n        });\n    }\n\n    // search by driver name\n    getTripsByDriverName(driverName: string): Observable<any> {\n        return this.http.get<any>(UrlConfig.SEARCH_TRIP_URL, {\n            params: {\n                driver_name: driverName\n            }\n        });\n    }\n\n    // search by starting location\n    getTripsByStartingLocationName(startingLocationName: string): Observable<any> {\n        return this.http.get<any>(UrlConfig.SEARCH_TRIP_URL, {\n            params: {\n                starting_location: startingLocationName\n            }\n        });\n    }\n\n    // search by destination location\n    getTripsByDestinationLocationName(destinationLocationName: string): Observable<any> {\n        return this.http.get<any>(UrlConfig.SEARCH_TRIP_URL, {\n            params: {\n                destination_location: destinationLocationName\n            }\n        });\n    }\n\n    getTripsByLocationNames(startingLocationName: string, destinationLocationName: string): Observable<any> {\n        return this.http.get<any>(UrlConfig.SEARCH_TRIP_URL, {\n            params: {\n                destination_location: destinationLocationName,\n                starting_location: startingLocationName\n            }\n        });\n    }\n\n    getTripsByLocationsAndCustomerName(startingLocationName: string, destinationLocationName: string,\n                                       customerName: string): Observable<any> {\n        return this.http.get<any>(UrlConfig.SEARCH_TRIP_URL, {\n            params: {\n                customer_name: customerName,\n                destination_location: destinationLocationName,\n                starting_location: startingLocationName\n            }\n        });\n    }\n\n    getTripsByLocationAndDriverName(startingLocationName: string, destinationLocationName: string,\n                                    driverName: string): Observable<any> {\n        return this.http.get<any>(UrlConfig.SEARCH_TRIP_URL, {\n            params: {\n                driver_name: driverName,\n                destination_location: destinationLocationName,\n                starting_location: startingLocationName\n            }\n        });\n    }\n\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {LogUtil} from '../utils';\nimport {Level, Label, UrlConfig} from '../configs';\nimport {User} from '../models';\nimport {ServerResponse} from '../interfaces';\nimport {defaultHttpOptions} from '../configs/http.config';\n\n@Injectable()\nexport class UserService {\n\n    private http: HttpClient;\n    private managedUserLevel: Level;\n\n    constructor(http: HttpClient) {\n        this.http = http;\n    }\n\n    getAllUsers(managedUserLevel?: Level): Observable<any> {\n        let getUrl = this.getRequestUrl();\n        if (managedUserLevel) {\n            const tempLevel = this.managedUserLevel;\n            this.managedUserLevel = managedUserLevel;\n            getUrl = this.getRequestUrl();\n            this.managedUserLevel = tempLevel;\n        }\n        LogUtil.ConsoleNag('get url: ' + getUrl);\n        return this.http.get<any>(getUrl);\n    }\n\n    getUserById(id: string): Observable<ServerResponse> {\n        const getUrl = `${this.getRequestUrl()}/details/${id}`;\n        return this.http.get<any>(getUrl);\n    }\n\n    getUserByPhone(phone: string): Observable<any> {\n        const getUrl = `${this.getRequestUrl()}/search/phone/${phone}`;\n        return this.http.get<any>(getUrl);\n    }\n\n    getUserByName(name: string): Observable<any> {\n        let getUrl = `${this.getRequestUrl()}/${name}`;\n        if (this.managedUserLevel === Level.DRIVER) {\n            getUrl = `${this.getRequestUrl()}/search/name/${name}`;\n        }\n        return this.http.get<any>(getUrl);\n    }\n\n    addUser(user: User): Observable<ServerResponse> {\n        const addUrl = this.getRequestUrl();\n        return this.http.post<ServerResponse>(addUrl, user);\n    }\n\n    addMultipleUsers(users: User[]): Observable<ServerResponse> {\n        let addMultipleUrl = this.getRequestUrl();\n        addMultipleUrl = `${addMultipleUrl}/${'multiple'}`;\n        return this.http.post<ServerResponse>(addMultipleUrl, users, defaultHttpOptions);\n    }\n\n    updateUser(user: User): Observable<ServerResponse> {\n        let updateUrl = this.getRequestUrl();\n        updateUrl = `${updateUrl}/${user._id}`;\n        return this.http.put<ServerResponse>(updateUrl, user);\n    }\n\n    deleteUser(id: String): Observable<ServerResponse> {\n        let deleteUrl = this.getRequestUrl();\n        deleteUrl = `${deleteUrl}/${id}`;\n        return this.http.delete<ServerResponse>(deleteUrl);\n    }\n\n    getRequestUrl(): string {\n        let url = '';\n        if (this.managedUserLevel === Level.SUPERVISOR) {\n            url = UrlConfig.SUPERVISOR_URL;\n        } else if (this.managedUserLevel === Level.DISPATCHER) {\n            url = UrlConfig.DISPATCHER_URL;\n        } else if (this.managedUserLevel === Level.DRIVER) {\n            url = UrlConfig.DRIVER_URL;\n        } else if (this.managedUserLevel === Level.CORPORATE_CLIENT) {\n            url = UrlConfig.CORPORATE_URL;\n        } else if (this.managedUserLevel === Level.CUSTOMER) {\n            url = UrlConfig.CUSTOMER_URL;\n        } else {\n            LogUtil.ConsoleNag('unknown manged user type');\n        }\n        return url;\n    }\n\n    setManagedUserLevel(level: Level) {\n        this.managedUserLevel = level;\n    }\n\n    getManagedUserLevel(): Level {\n        return this.managedUserLevel;\n    }\n\n    // this is a string like Supervisor, Customer, Driver, Dispatcher ...\n    getManagedUserLabel(): string {\n        switch (this.managedUserLevel) {\n            case Level.SUPERVISOR:\n                return Label.SUPERVISOR_CAPITALIZED;\n            case Level.DRIVER:\n                return Label.DRIVER_CAPITALIZED;\n            case Level.DISPATCHER:\n                return Label.DISPATCHER_CAPITALIZED;\n            case Level.CORPORATE_CLIENT:\n                return Label.CORPORATE_CAPITALIZED;\n            case Level.CUSTOMER:\n                return Label.CUSTOMER_CAPITALIZED;\n            default:\n                LogUtil.NagNag(`unrecognized managedUserLevel: ${this.managedUserLevel}`);\n                return undefined;\n        }\n    }\n\n}\n","import {throwError} from 'rxjs';\nimport {HttpErrorResponse} from '@angular/common/http';\n\nexport function handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        // console.error('An error occurred:', error.error.message.toString());\n    } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        // console.error(\n        //     `Backend returned code ${error.status.toString()}, ` +\n        //     `body was: ${error.error.toString()}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n        'Something bad happened; please try again later.');\n}\n","export * from './http.util';\nexport * from './log.util';\n","import {EnvConfig} from '../configs/env.config';\n\nexport class LogUtil {\n\n    static AlertNag(msg: string) {\n        if (EnvConfig.DEBUG) {\n            window.alert(msg);\n        }\n    }\n\n    static ConsoleNag(msg: string, error: boolean = false) {\n        if (EnvConfig.DEBUG) {\n            if (error) {\n                console.error(msg);\n            } else {\n                console.log(msg);\n            }\n        }\n    }\n\n    static NagNag(msg: string) {\n        if (EnvConfig.DEBUG) {\n            window.alert(msg);\n            console.log(msg);\n        }\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}